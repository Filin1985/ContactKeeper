{"ast":null,"code":"var _jsxFileName = \"/Users/ihsmen/Documents/Programming/React/ReactBT/ContactKeeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4;\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter \n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/ihsmen/Documents/Programming/React/ReactBT/ContactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,EAAE,EAAE,CADG;AAEPC,MAAAA,IAAI,EAAE,cAFC;AAGPC,MAAAA,KAAK,EAAE,gBAHA;AAIPC,MAAAA,KAAK,EAAE,cAJA;AAKPC,MAAAA,IAAI,EAAE;AALC,KAAD,EAOV;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,gBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAPU,EAcV;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,iBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAdU,CADO;AAsBjBC,IAAAA,OAAO,EAAE,IAtBQ;AAuBjBC,IAAAA,QAAQ,EAAE;AAvBO,GAArB;AA0BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CA3B0B,CA6B1B;;AACA,QAAMW,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACV,EAAR,GAAad,IAAI,CAACD,EAAlB;AACAuB,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEf,WAAR;AAAqBsB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACH,GAHD,CA9B0B,CAmC1B;;;AACA,QAAME,aAAa,GAAGZ,EAAE,IAAI;AACxBQ,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEd,cAAR;AAAwBqB,MAAAA,OAAO,EAAEX;AAAjC,KAAD,CAAR;AACH,GAFD,CApC0B,CAwC1B;;;AACA,QAAMa,UAAU,GAAGH,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEb,WAAR;AAAqBoB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACH,GAFD,CAzC0B,CA6C1B;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACH,GAFD,CA9C0B,CAiD1B;;;AACA,QAAMuB,aAAa,GAAGL,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEX,cAAR;AAAwBkB,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAAR;AACH,GAFD,CAlD0B,CAsD1B;;;AACA,QAAMM,aAAa,GAAGC,IAAI,IAAI;AAC1BT,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEV,eAAR;AAAyBiB,MAAAA,OAAO,EAAEM;AAAlC,KAAD,CAAR;AACH,GAFD,CAvD0B,CA2D1B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBV,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,QAAQ,EAAEQ,KAAK,CAACR,QADb;AAEHM,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFZ;AAGHI,MAAAA,UAHG;AAIHG,MAAAA,aAJG;AAKHC,MAAAA,UALG;AAMHC,MAAAA,YANG;AAOHC,MAAAA,aAPG;AAQHC,MAAAA,aARG;AASHE,MAAAA;AATG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYMrB,KAAK,CAACsB,QAZZ,CADJ;AAgBH,CAhFD;;AAkFA,eAAevB,YAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport {v4 as uuid} from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [{\n            id: 1,\n            name: 'Jill Johnson',\n            email: 'jill@gmail.com',\n            phone: '111-111-1111',\n            type: 'personal'\n        },\n        {\n            id: 2,\n            name: 'Sara Watson',\n            email: 'sara@gmail.com',\n            phone: '222-222-2222',\n            type: 'personal'\n        },\n        {\n            id: 3,\n            name: 'Harry White',\n            email: 'harry@gmail.com',\n            phone: '333-333-3333',\n            type: 'professional'\n        }],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Add Contact\n    const addContact = contact => {\n        contact.id = uuid.v4;\n        dispatch({ type: ADD_CONTACT, payload: contact });\n    };\n\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({ type: DELETE_CONTACT, payload: id });\n    };\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    };\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    };\n    // Update Contact\n    const updateContact = contact => {\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\n    };\n\n    // Filter Contacts\n    const filterContact = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text });\n    };\n\n    // Clear Filter \n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContact,\n                clearFilter\n            }}>\n            { props.children }\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;\n\n"]},"metadata":{},"sourceType":"module"}