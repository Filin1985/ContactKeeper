{"ast":null,"code":"var _jsxFileName = \"/Users/ihsmen/Documents/Programming/React/ReactBT/ContactKeeper/client/src/components/contacts/ContactItem.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({\n  contact\n}) => {\n  const contactContext = useContext(ContactContext);\n  const {\n    deleteContact,\n    setCurrent,\n    clearCurrent\n  } = contactContext;\n  const {\n    id,\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onDelete = () => {\n    deleteContact(id);\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-primary text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, name, ' ', /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      float: 'right'\n    },\n    className: 'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, type.charAt(0).toUpperCase() + type.slice(1))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, email && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-envelope-open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), \" \", email), phone && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), \" \", phone)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-sm\",\n    onClick: () => setCurrent(contact),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Delete\")));\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItem;","map":{"version":3,"sources":["/Users/ihsmen/Documents/Programming/React/ReactBT/ContactKeeper/client/src/components/contacts/ContactItem.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItem","contact","contactContext","deleteContact","setCurrent","clearCurrent","id","name","email","phone","type","onDelete","float","charAt","toUpperCase","slice","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC/B,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAA8CH,cAApD;AAEA,QAAM;AAAEI,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAmCT,OAAzC;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACnBR,IAAAA,aAAa,CAACG,EAAD,CAAb;AACAD,IAAAA,YAAY;AACf,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKE,IAFL,EAEW,GAFX,eAGI;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,IAAA,SAAS,EAAE,YACVF,IAAI,KAAK,cAAT,GAA0B,eAA1B,GAA4C,eADlC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BJ,IAAI,CAACK,KAAL,CAAW,CAAX,CAJhC,CAHJ,CADJ,eAaI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OAC2CA,KAD3C,CAFR,EAMKC,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OACmCA,KADnC,CAPR,CAbJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAE,MAAML,UAAU,CAACH,OAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEU,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAzBJ,CADJ;AAgCH,CA3CD;;AA6CAX,WAAW,CAACgB,SAAZ,GAAwB;AACpBf,EAAAA,OAAO,EAAEH,SAAS,CAACmB,MAAV,CAAiBC;AADN,CAAxB;AAIA,eAAelB,WAAf","sourcesContent":["import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext'\n\nconst ContactItem = ({contact}) => {\n    const contactContext = useContext(ContactContext);\n    const { deleteContact, setCurrent, clearCurrent } = contactContext;\n\n    const { id, name, email, phone, type } = contact;\n\n    const onDelete = () => {\n        deleteContact(id);\n        clearCurrent();\n    }\n\n    return (\n        <div className='card bg-light'>\n            <h3 className='text-primary text-left'>\n                \n                {name}{' '} \n                <span style={{ float: 'right' }}\n                className={'badge ' + \n                (type === 'professional' ? 'badge-success' : 'badge-primary') \n                }>\n                {type.charAt(0).toUpperCase() + type.slice(1)}\n                </span>\n\n            </h3>\n\n            <ul className=\"list\">\n                {email && (\n                    <li>\n                        <i className=\"fas fa-envelope-open\"/> {email}\n                    </li>\n                )}\n                {phone && (\n                    <li>\n                        <i className=\"fas fa-phone\"/> {phone}\n                    </li>\n                )}\n            </ul>\n            <p>\n                <button className=\"btn btn-dark btn-sm\" onClick={() => setCurrent(contact)}>Edit</button>\n                <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>Delete</button>\n            </p>\n        </div>\n    )\n};\n\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default ContactItem\n"]},"metadata":{},"sourceType":"module"}